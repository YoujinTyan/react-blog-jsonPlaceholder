{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eugene\\\\Desktop\\\\tutorial-intro\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Post } from \"./components/Post\";\nimport \"./style/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    await fetch('https://jsonplaceholder.typicode.com/comments/?_limit=10').then(response => response.json()).then(data => {\n      setPosts(data);\n    }).catch(error => console.log(error));\n  };\n\n  // const onAdd;\n\n  const onEdit = async (id, title, email, content) => {\n    // console.log(title, content);\n    await fetch(`https://jsonplaceholder.typicode.com/comments/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        name: title,\n        email: email,\n        body: email\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => {\n      if (response.status !== 200) {\n        return;\n      } else {\n        console.log('success');\n        return response.json();\n      }\n    }).then(data => {\n      const updatedPosts = posts.map(post => {\n        if (post.id === id) {\n          post.name = title;\n          post.content = content;\n          post.email = email;\n        }\n        return post;\n      });\n      setPosts(posts => updatedPosts);\n    }).catch(error => console.log(error));\n  };\n  const onDelete = async id => {\n    await fetch(`https://jsonplaceholder.typicode.com/comments/${id}`, {\n      method: \"DELETE\"\n    }).then(response => {\n      if (response.status !== 200) {\n        return;\n      } else {\n        setPosts(posts.filter(post => {\n          return post.id !== id;\n        }));\n      }\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      id: post.id,\n      title: post.name,\n      content: post.body,\n      email: post.email,\n      onEdit: onEdit,\n      onDelete: onDelete\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Post","jsxDEV","_jsxDEV","App","_s","posts","setPosts","fetchData","fetch","then","response","json","data","catch","error","console","log","onEdit","id","title","email","content","method","body","JSON","stringify","name","headers","status","updatedPosts","map","post","onDelete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/eugene/Desktop/tutorial-intro/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Post } from \"./components/Post\";\nimport \"./style/App.css\";\n\n\nexport default function App() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    await fetch('https://jsonplaceholder.typicode.com/comments/?_limit=10')\n    .then((response) => response.json())\n    .then((data) => {\n      setPosts(data);\n    })\n    .catch((error) => console.log(error));\n  };\n\n  // const onAdd;\n\n  const onEdit = async (id, title, email, content) => {\n    // console.log(title, content);\n    await fetch(`https://jsonplaceholder.typicode.com/comments/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        name: title,\n        email: email,\n        body: email\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n    .then((response) => {\n      if (response.status !== 200) {\n        return;\n      } else {\n        console.log('success');\n        return response.json();\n      }\n    })\n    .then((data) => {\n      const updatedPosts = posts.map((post) => {\n        if (post.id === id) {\n          post.name = title;\n          post.content = content;\n          post.email = email;\n        }\n        return post;\n      });\n\n      setPosts((posts) => updatedPosts);\n    })\n    .catch((error) => console.log(error));\n  };\n\n  const onDelete = async (id) => {\n    await fetch(`https://jsonplaceholder.typicode.com/comments/${id}`, {\n      method: \"DELETE\"\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          return;\n        } else {\n          setPosts(\n            posts.filter((post) => {\n              return post.id !== id;\n            })\n          );\n        }\n      })\n        .catch((error) => console.log(error));\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Blog</h1>\n      {posts.map((post) => (\n        <Post\n          id={post.id}\n          key={post.id}\n          title={post.name}\n          content={post.body}\n          email={post.email}\n          onEdit={onEdit}\n          onDelete={onDelete}\n        />\n      ))};\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}